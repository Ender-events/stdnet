#  Copyright (c) 2023 Dietmar Kuehl http://www.dietmar-kuehl.de
# 
#  Licensed under the Apache License Version 2.0 with LLVM Exceptions
#  (the "License"); you may not use this file except in compliance with
#  the License. You may obtain a copy of the License at
# 
#    https://llvm.org/LICENSE.txt
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

cmake_minimum_required(VERSION 3.22.1)
project(stdnet)

add_compile_options(-fsanitize=address -g)
add_link_options(-fsanitize=address)

# --- Make Catch2 available ----------------------------------------------------
include(FetchContent)

FetchContent_Declare(
  Catch2
  GIT_REPOSITORY https://github.com/catchorg/Catch2.git
  GIT_TAG        v3.4.0 # or a later release
)

# --- Make stdexec available ---------------------------------------------------
FetchContent_Declare(
  STDEXEC
  GIT_REPOSITORY https://github.com/NVIDIA/stdexec.git
  GIT_TAG        main
)
set(STDEXEC_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
set(STDEXEC_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(BUILD_TESTING OFF CACHE BOOL "" FORCE)

# --- Make libevent available --------------------------------------------------
FetchContent_Declare(
  libevent
  GIT_REPOSITORY https://github.com/libevent/libevent.git
  GIT_TAG        release-2.1.12-stable
)

FetchContent_MakeAvailable(Catch2 STDEXEC libevent)
include(Catch)


# --- stdnet -------------------------------------------------------------------
add_library(stdnet INTERFACE)
add_library(stdnet::stdnet ALIAS stdnet)
target_include_directories(stdnet INTERFACE include)
target_compile_options(stdnet INTERFACE -Wno-deprecated-declarations)
target_link_libraries(stdnet INTERFACE STDEXEC::stdexec event_core_shared)
set(CMAKE_CXX_STANDARD 23)

list(APPEND stdnet_examples
    accu-2024
)
list(APPEND xstdnet_examples
    overview
    client
    simple-http-server
    server
    http-server-template
    accu-client-2024
)
foreach(example ${stdnet_examples})
    add_executable(${example} examples/${example}.cpp)
    target_link_libraries(${example} stdnet)
endforeach()

list (APPEND stdnet_tests
    buffer
)

if(${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})
    include(CTest)
    list(TRANSFORM stdnet_tests PREPEND "test/stdnet/")
    list(TRANSFORM stdnet_tests APPEND ".cpp")

    add_executable(test_stdnet ${stdnet_tests})
    set_target_properties(test_stdnet PROPERTIES
        CXX_STANDARD 20
        CXX_STANDARD_REQUIRED ON
        CXX_EXTENSIONS OFF
    )
    target_link_libraries(test_stdnet
        stdnet
        Catch2::Catch2WithMain
    )
    catch_discover_tests(test_stdnet)
endif()
